# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html

parameters:
    security.exception_listener.class: AppBundle\Security\Firewall\ExceptionListener

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]
    jms_serializer.object_constructor:
        alias: jms_serializer.doctrine_object_constructor
        public: false

    jms_serializer.std_class_handler:
        class:  AppBundle\Serializer\Handler\StdClassHandler
        tags:
            - { name: jms_serializer.subscribing_handler}
        arguments: ["@service_container"]

    jms_serializer.cost_and_revenue_handler:
        class:  AppBundle\Serializer\Handler\CostAndRevenueHandler
        tags:
            - { name: jms_serializer.subscribing_handler}
        calls:
            - [setContainer, ["@service_container"]]

    app.role_repository:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments: [AppBundle\Entity\Role, ]

    app.security.access.decision_manager:
        alias: security.access.decision_manager
        public: true

    security.role_hierarchy:
        class: AppBundle\Security\Role\DynamicRoleHierarchy
        arguments: ["@app.role_repository"]
        public: false

    security.listener.exception_listener:
        class: AppBundle\Listener\ExceptionEventListener
        arguments: ["@service_container"]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: handleKernelException }

    security.listener.ajax_authentication_listener:
        class: AppBundle\Listener\AjaxAuthenticationEventListener
        arguments: ["@service_container"]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onCoreException, priority: 1000 }

    app.user_session_closed_listener:
        class: AppBundle\Listener\UserSessionClosedEventListener
        arguments: ["@service_container"]
        tags:
          - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 130 }

    app.user_limit_listener:
        class: AppBundle\Listener\UserLimitEventListener
        arguments: ["@service_container"]
        tags:
          - { name: kernel.event_listener, event: kernel.controller, method: onCoreController }

    app.inventory_alerts:
        class: AppBundle\Library\Service\InventoryAlertsService
        calls:
            - [setContainer, ["@service_container"]]

    app.static_menu_builder:
        class: AppBundle\Library\Service\StaticMenuBuilderService
        calls:
            - [setContainer, ["@service_container"]]

    app.tid_init:
        class: AppBundle\Library\Service\TravelerIdInitializationService
        calls:
            - [setContainer, ["@service_container"]]
    app.stripe.plan_collector:
        class: AppBundle\Library\Stripe\PlanCollector
        calls:
            - [setContainer, ["@service_container"]]
    app.stripe.subscription_collector:
        class: AppBundle\Library\Stripe\SubscriptionCollector
        calls:
            - [setContainer, ["@service_container"]]
    app.stripe.invoice_collector:
        class: AppBundle\Library\Stripe\InvoiceCollector
        calls:
            - [setContainer, ["@service_container"]]